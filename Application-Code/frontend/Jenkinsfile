pipeline{
    agent any 
    tools{
        nodejs
    }
    environment {
        SONARQUBE_ENV = 'sonar-server'
        ecr_repo = '211125410061.dkr.ecr.us-west-2.amazonaws.com/frontend'
        aws_region = 'us-west-2'
    }
    stages{
        stage ("Cleaning Workspace"){
            steps{
                    cleanWs()
                }
        }

        stage("Fetching git repo"){
            steps{
                git branch 'main', credentialsID: 'Github', url: "https://github.com/Vaibhav-Manwani/devops-project.git"
            }
        }

        stage ("Sonarqube Analysis"){
            steps{
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey=frontend \
                        -Dsonar.sources=. \
                    """
        }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
                }
            }
        }
        stage("Build Image"){
            steps{
                script{
                    dir("Application-Code/frontend"){
                        sh 'docker system prune -a'
                        sh 'docker build -t ${ecr_repo}:${BUILD_NUMBER}'
                    }
                }
            }
        }

        stage("Push image to ECR"){
            steps{
                script{
                    sh '''
                        aws ecr get-login-password --region $aws_region | docker login --username AWS --password-stdin $ecr_repo
                        docker push $ecr_repo:$BUILD_NUMBER
                    '''
                }
            }
        }

    }
}